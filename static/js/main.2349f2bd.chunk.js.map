{"version":3,"sources":["components/square.js","App.js","helpers/winner.js","index.js"],"names":["Square","props","className","onClick","value","App","useState","player1","setPlayer1","player2","setPlayer2","move","setMove","isActive","setIsActive","Array","fill","board","setBoard","winner","setWinner","handleClick","val","newBoard","splice","console","log","lines","i","length","a","b","c","CalculateWinner","renderSquare","id","toUpperCase","onSubmit","e","preventDefault","handleSubmit","type","placeholder","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAGe,SAASA,EAAOC,GAE7B,OACE,qBAAKC,UAAU,SAASC,QAAS,kBAAMF,EAAME,WAA7C,SAAyDF,EAAMG,Q,MCsFpDC,MAvFf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA0BR,mBAASS,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BZ,qBAA5B,mBAAOa,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAACC,GACnB,IAAIC,EAAWN,EACZN,EACDY,EAASC,OAAOF,EAAK,EAAG,KAExBC,EAASC,OAAOF,EAAK,EAAG,KAE1BJ,EAASK,GACTE,QAAQC,IAAIJ,EAAKL,GACjBL,GAASD,GACTS,ECtBW,SAAyBH,GAYtC,IAXA,IAAMU,EAAQ,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGCC,EAAE,EAAGA,EAAGD,EAAME,OAAQD,IAAK,CACjC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAGf,EAAMa,IAAMb,EAAMa,KAAOb,EAAMc,IAAMd,EAAMa,KAAOb,EAAMe,GACzD,OAAOf,EAAMa,GAGjB,OAAO,KDIKG,CAAgBhB,KAStBiB,EAAe,SAACN,GACpB,OACE,cAAC5B,EAAD,CACEI,MAAOa,EAAMW,GACbzB,QAAS,kBAAMkB,EAAYO,OAcjC,OACE,mCACCf,EACD,sBAAKsB,GAAG,kBAAR,UACE,+BAAK5B,EAAQ6B,cAAb,OAAgC3B,EAAQ2B,iBACvCjB,EACD,4CAAeA,KACf,8CAAiBR,EAAO,IAAM,OAE9B,sBAAKT,UAAU,kBAAf,UACE,sBAAKA,UAAU,MAAf,UACGgC,EAAa,GACbA,EAAa,GACbA,EAAa,MAEd,sBAAKhC,UAAU,MAAf,UACCgC,EAAa,GACbA,EAAa,GACbA,EAAa,MAEd,sBAAKhC,UAAU,MAAf,UACCgC,EAAa,GACbA,EAAa,GACbA,EAAa,SAGlB,wBAAQ/B,QAAS,kBAlCnBK,EAAW,IACXE,EAAW,IACXE,GAAQ,GACRE,GAAY,GACZI,EAASH,MAAM,GAAGC,KAAK,YACvBI,KA6BE,2BAGF,sBAAKlB,UAAU,YAAf,UACE,6CACA,uBAAMmC,SAAU,SAACC,GAAD,OAvDC,SAACA,GACpBA,EAAEC,iBACFzB,GAAY,GACZW,QAAQC,IAAInB,EAASE,GAoDI+B,CAAaF,IAApC,UACE,uBAAOG,KAAK,OAAOC,YAAY,UAAUC,SAAU,SAACL,GAAD,OAAO5B,EAAW4B,EAAEM,OAAOxC,UAC9E,uBAAOqC,KAAK,OAAOC,YAAY,UAAUC,SAAU,SAACL,GAAD,OAAO9B,EAAW8B,EAAEM,OAAOxC,UAC9E,wDE/ERyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2349f2bd.chunk.js","sourcesContent":["// import { useState } from 'react';\nimport './square.css';\n\nexport default function Square(props) {\n\n  return (\n    <div className='square' onClick={() => props.onClick()}>{props.value}</div>\n  )\n}","import React, { useState } from 'react';\nimport Square from \"./components/square\";\nimport CalculateWinner from './helpers/winner';\nimport \"./App.css\";\n\nfunction App() {\n  const [player1, setPlayer1] = useState('');\n  const [player2, setPlayer2] = useState('');\n  const [move, setMove] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [winner, setWinner] = useState();\n\n  const handleClick = (val) => {\n    let newBoard = board;\n    if(move) {\n      newBoard.splice(val, 1, 'X')\n    } else {\n      newBoard.splice(val, 1, 'O')\n    }\n    setBoard(newBoard);\n    console.log(val, board);\n    setMove(!move);\n    setWinner(CalculateWinner(board));\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsActive(true);\n    console.log(player1, player2);\n  }\n\n  const renderSquare = (i) => {\n    return (\n      <Square\n        value={board[i]}\n        onClick={() => handleClick(i)}\n        />\n    )\n  }\n\n  const playAgain = () => {\n    setPlayer1([]);\n    setPlayer2([]);\n    setMove(false);\n    setIsActive(false);\n    setBoard(Array(9).fill(null));\n    setWinner();\n  }\n\n  return (\n    <>\n    {isActive ? \n    <div id='parentContainer'>\n      <h1>{player1.toUpperCase()} vs {player2.toUpperCase()}</h1>\n      {winner ? \n      <h1>Winner is {winner}</h1> :  \n      <h1>Next Move - {move ? \"X\" : \"O\"}</h1>\n    }\n      <div className=\"squareContainer\">\n        <div className=\"row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n          </div>\n          <div className=\"row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n          </div>\n          <div className=\"row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n          </div>\n      </div>\n      <button onClick={() => playAgain()}>Play Again</button>\n    </div>\n    : \n    <div className='inputForm'>\n      <h1>TiC TaC ToE</h1>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input type='text' placeholder='player1' onChange={(e) => setPlayer2(e.target.value)}></input>\n        <input type='text' placeholder='player2' onChange={(e) => setPlayer1(e.target.value)}></input>\n        <button>Lets Play</button>\n      </form>\n    </div>\n    }\n    </>\n  );\n}\n\nexport default App;\n","\nexport default function CalculateWinner(board) {\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6],\n  ];\n\n  for(let i=0; i< lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if(board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}